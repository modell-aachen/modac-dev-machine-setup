---
- hosts: all
  vars_files:
    - vars/main.yml
    - vars/tooling_version.yml
  vars:
    all_env: |
      {{ dev.env | combine(env) }}
    all_snaps: |
      {{ dev.snaps | union(snaps) }}
    all_remove_snaps: |
      {{ dev.remove_snaps | union(remove_snaps) }}
    all_packages_debian: |
      {{ dev.packages | union(packages) }}
    all_remove_packages_debian: |
      {{ dev.remove_packages | union(remove_packages) }}
    all_packages_darwin: |
      {{ dev.packages_darwin | union(packages_darwin) }}
    all_remove_packages_darwin: |
      {{ dev.remove_packages_darwin | union(remove_packages_darwin) }}
    all_install_modules: |
      {{ dev.install_modules | union(install_modules) }}
    all_kubectl_plugins: |
      {{ dev.kubectl_plugins | union(kubectl_plugins) }}

  tasks:
    - name: set facts
      tags:
        - always
      block:
        - name: Set general incompatibility
          set_fact:
            is_ubuntu: false
            is_macosx: false

        - name: Set Ubuntu compatibility
          set_fact:
            is_ubuntu: true
          when: ansible_facts['os_family'] == "Debian"

        - name: Set MAC OSX compatibility
          set_fact:
            is_macosx: true
          when: ansible_facts['os_family'] == "Darwin" and not is_ubuntu

        - name: Set architecture to amd64
          set_fact:
            machine_architecture: "amd64"
          when: ansible_facts['machine'] == "x86_64"

        - name: Set architecture to arm64
          set_fact:
            machine_architecture: "arm64"
          when: ansible_facts['machine'] == "arm64"

    - name: Install and Remove packages
      block:
        - include_tasks:
            file: tasks/install_packages.yml
        - include_tasks:
            file: tasks/remove_packages.yml
      tags:
        - packages

    - name: Install and Remove snap packages (Ubuntu only)
      become: true
      block:
        - include_tasks:
            file: tasks/install_snaps.yml
        - include_tasks:
            file: tasks/remove_snaps.yml
      when: is_ubuntu and install_snaps
      tags:
        - packages

    - name: Install and configure tooling
      block:
        - name: Loop over custom modules
          include_tasks:
            file: "tasks/install/_install_module_if_existing.yaml"
          loop: "{{ all_install_modules }}"
          loop_control:
            loop_var: module
      tags:
        - tooling

    - name: Install and configure modac-bash
      block:
        - include_tasks:
            file: tasks/setup_modac_bash.yml
        - name: Write enviroment variables
          lineinfile:
            path: "{{ ansible_env.HOME }}/.env"
            regexp: "^export {{ item.key }}="
            line: "export {{ item.key }}=\"{{ item.value }}\""
            create: true
          loop: "{{ all_env | dict2items }}"
        - name: Install modac-bash-helper based on python
          shell:
            cmd: |
              if [ -f "$HOME/.modac-bash/install_modac_shell_helper.sh" ]; then
                bash -e "$HOME/.modac-bash/install_modac_shell_helper.sh"
              fi
      tags:
        - scripts

    - include_tasks:
        file: tasks/install_dotfiles.yml
        apply:
          tags:
            - always
      tags:
        - dotfiles
