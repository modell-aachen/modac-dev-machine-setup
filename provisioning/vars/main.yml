dev:
  packages:
  - curl
  - easy-rsa
  - htop
  - inotify-tools
  - net-tools
  - network-manager-openvpn
  - network-manager-openvpn-gnome
  - openvpn
  - restic
  - ruby
  - python-is-python3
  # Packages needed to build CKE locally
  - build-essential
  - libcairo2-dev
  - libgif-dev
  - libjpeg-dev
  - libpango1.0-dev
  - librsvg2-dev
  - libnss3-tools
  - sshpass
  - rdesktop # patchday process
  - apt-transport-https
  - ca-certificates
  - gnupg
  - age

  remove_packages:
  - python3-argcomplete
  - python3-paramiko
  - python3-scp
  - python3-psutil
  - devspace
  - git
  - jq
  - ghcli
  - vim
  - tmux
  - wget

  pip_packages:
  - name: docker
    version: "6.1.2"
  - argcomplete
  - paramiko
  - scp
  - psutil

  homebrew:
    installed_packages:
    - autoconf
    - bash-completion
    - gettext
    - homebrew/core/go
    - gpg
    - iperf
    - libevent
    #- mcrypt
    - homebrew/core/nmap
    - ssh-copy-id
    - readline
    - openssl
    - pv
    - wrk
    - zsh-history-substring-search
    - zsh
    - coreutils
    - findutils
    - gnu-tar
    - gnu-sed
    - gawk
    - gnu-getopt
    - grep
    - lima
    - qemu
    - docker
    - docker-compose
    - docker-buildx
    - colima
    - nss
    - dnsmasq
    - fzf
    - openvpn
    - restic
    - teleport
    - asdf
    taps: []
    cask_appdir: /Applications
    cask_apps:
    - chromedriver
    - dropbox
    - firefox
    - google-chrome
    - visual-studio-code
    - spotify
    - unnaturalscrollwheels
    - microsoft-teams
    - iterm2

  mas:
    installed_apps: []
    email: ""
    password: ""

  packages_darwin: []

  kubectl_plugins:
  - ns
  - ctx
  - konfig
  - oidc-login

  install_modules:
  - docker
  - mkcert
  - certificates
  - packer
  - vault
  - k3s
  - nvm
  - poetry
  - kube_linter
  - helm
  - kubectl
  - sops
  - kustomize
  - yq
  - flux
  - task
  # the follwing modules will be skipped on macos, since no general tasks exists
  - terraform
  - terragrunt
  - google-cloud-sdk
  - ms_edge
  - asdf_elixir

  install_snaps: true
  snaps:
  - name: code
    is_classic: true
  - name: go
    is_classic: true
  remove_packages:
  - helm
  - kubectl
  remove_packages_darwin: []
  remove_snaps:
  - docker
  - node
  - helm
  - kubectl
  - google-cloud-sdk
  certificates:
  - host: localhost
    location: "{{ ansible_env.HOME }}/certs/localhost"
  env:
    REPOS_DIRECTORY: "{{ lookup('env', 'REPOS_DIRECTORY') }}"
    PROVISIONER_DIRECTORY: "{{ lookup('env', 'PROVISIONER_DIRECTORY') }}"
    MODAC_BASH_DIRECTORY: "{{ lookup('env', 'MODAC_BASH_DIRECTORY') | default( ansible_env.HOME + '/.modac-bash', true) }}"
    VAULT_ADDR: https://vault.modac.cloud
    GITHUB_AUTH_TOKEN: ''
    GITHUB_ORGANIZATION: modell-aachen
    RMS_AUTH_TOKEN: ''
    JENKINS_USER: ''
    JENKINS_TOKEN: ''
    NEXUS_BOT_TOKEN: ''
    QWIKI_DEVELOPMENT_ROOT_CA: "{{ ansible_env.HOME }}/.local/share/mkcert"

  service_tooling_only: false

antigen_install_dir: ~/.antigen
antigen_install_path: "{{ antigen_install_dir }}/antigen.zsh"

asdf_install_dir:  "{{ ansible_env.HOME }}/.asdf"
asdf_path_ubuntu: "{{ asdf_install_dir }}/bin/asdf"
asdf_path: "{{ asdf_path_ubuntu if is_ubuntu else 'asdf' }}"

configure_shell_rc: true

service:
  install_modules:
  - vault
  - poetry
  - helm
  - kubectl
  - kustomize
  - google-cloud-sdk
  - ms_edge
