#!/usr/bin/env bash
set -e

function add_init_hook() {
    local shell=$1
    local shell_path="$HOME/.${shell}rc"

    if [[ -f "$shell_path" && -z "$( cat "$shell_path" | grep 'devbox global shellenv --init-hook' )" ]]; then
        echo 'eval "$(devbox global shellenv --init-hook)"' >> "$shell_path"
    fi
}

function add_devbox_completions() {
    local shell=$1
    local shell_path="$HOME/.${shell}rc"
    local completions_path="$HOME/.${shell}_completions"
    local devbox_completions_path="$completions_path/devbox.sh"

    if [[ -f "$shell_path" && ! -f "$devbox_completions_path" ]]; then
        mkdir -p "$completions_path"
        devbox completion ${shell} > "$devbox_completions_path"
    fi
}

if [[ "$(uname -s)" = "Linux"* ]]; then
    if [[ ! "$(command -v curl)" ]]; then
        echo "Installing curl"
        sudo apt update
        sudo apt install -y curl
    fi
fi

if [ -z $( which devbox ) ]; then
    echo "Installing devbox"
    curl -fsSL https://get.jetify.com/devbox | bash
fi

env_path="$HOME/.secrets/.env"
if [[ ! -f "$env_path" ]]; then
    mkdir -p "$HOME/.secrets"
    touch "$env_path"
fi

for shell in bash zsh; do
    add_init_hook "$shell"
    add_devbox_completions "$shell"
done

base_path=$( dirname $(realpath "$0") )
default_devbox_dir="$HOME/.local/share/devbox/global/default"
global_devbox="$default_devbox_dir/devbox.json"

echo $base_path
[ ! -d $default_devbox_dir ] && mkdir -p $default_devbox_dir
[ ! -f $global_devbox ] && sed "s#{base_path}#$base_path#g;s#{env_path}#$env_path#" "$base_path/templates/devbox.json" > $global_devbox

devbox global update
eval "$(devbox global shellenv --preserve-path-stack -r)" && hash -r

if [[ "$(uname -s)" = "Linux"* ]]; then
    op_keyring=/usr/share/keyrings/1password-archive-keyring.gpg
    if [ ! -f "$op_keyring" ]; then
        curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output "$op_keyring"
    fi

    op_source_list=/etc/apt/sources.list.d/1password.list
    if [ ! -f "$op_source_list" ]; then
        echo "deb [arch=amd64 signed-by=$op_keyring] https://downloads.1password.com/linux/debian/amd64 stable main" | sudo tee "$op_source_list"
    fi

    op_gpg=/usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
    if [ ! -f "$op_gpg" ]; then
        sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22
        curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
        sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
        curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output "$op_gpg"
        sudo apt update
    fi

    if apt-cache policy 1password | grep -wq "Installed: (none)"; then
        sudo apt install -y 1password 1password-cli
        echo -e "Please configure 1Password and ${BI_RED}connect to 1Password cli.$NC"
        echo -e "Afterwards, run ${BI_RED}'source ~/.bashrc'$NC and trigger provisioning with ${BI_RED}'machine provision'$NC."
        exit 1
    fi
fi
